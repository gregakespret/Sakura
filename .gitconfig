[push]
	default = current
[rerere]
	enabled = true
[core]
	precomposeunicode = true
	excludesfile = /Users/grega_kespret/.gitignore_global
	editor = code -n --wait
  	ignorecase = false
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
[user]
	name = Grega Kespret
	email = grega.kespret@airbnb.com
[diff]
    tool = default-difftool
[difftool "default-difftool"]
    cmd = code -n --wait --diff $LOCAL $REMOTE
[fetch]
	prune = true
	pruneTags = true
[hub]
	host = git.musta.ch
[mergetool]
	keepBackup = true
[color]
  ui = auto
[color "branch"]
	current = yellow reverse
	local = yellow
	remote = green
[color "diff"]
	meta = yellow bold
	frag = magenta bold
	old = red bold
	new = green bold
[color "status"]
	added = yellow
	changed = green
	untracked = cyan

[alias]
	st = status
	ci = commit
	br = branch
	co = checkout
	pp = "!git push -u origin $(git branch-name)"
	rev = merge --no-ff --no-commit
	cowd = "!f() { git checkout $1; dbswitch mab_$1 <~/master.sql;}; f"
	ds = diff --staged
	amend = commit --amend -C HEAD
	undo = reset --soft HEAD^
	ls = log --pretty=format:'%C(yellow)%h %C(blue)%ad%C(red)%d %C(reset)%s%C(green) [%cn]' --decorate --date=short
	yesterday = log --all --since='1 day ago' --oneline --author=grega@celtra.com
	lastweek = log --all --since='1 week ago' --oneline --author=grega@celtra.com

	history = log --graph --pretty=format:'%C(yellow)%h%Creset %C(bold blue)%an%Creset %Cgreen(%cr)%Creset: %s'

	last = show `!git rev-parse HEAD`
	update = !git stash && git fetch && git rebase && git stash pop

	branch-name = !git for-each-ref --format='%(refname:short)' `git symbolic-ref HEAD`

	sshow  = "!f() { git stash show `git rev-parse stash^{/$*}` -p; }; f"
	sapply = "!f() { git stash apply `git rev-parse stash^{/$*}`; }; f"
	latest = for-each-ref --sort=-committerdate --format='%(committerdate:short) %(refname:short) [%(committername)]'

	assume   = update-index --assume-unchanged
	unassume = update-index --no-assume-unchanged
	assumed  = "!git ls-files -v | grep ^h | cut -c 3-"

	snapshot = !git stash save "snapshot: $(date)" && git stash apply "stash@{0}"

	delete-unused-branches = "!f() { git branch | xargs git branch -d; }; f"
	missing = "!f() { git rev-list ..$1 --oneline | sed -e '1 iOnly in other:'; git rev-list $1.. --oneline | sed -e '1 iOnly in HEAD:'; }; f"
